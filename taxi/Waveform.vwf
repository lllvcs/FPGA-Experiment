/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off taxi -c taxi --vector_source="D:/FPGA/taxi/Waveform.vwf" --testbench_file="D:/FPGA/taxi/simulation/qsim/Waveform.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off taxi -c taxi --vector_source="D:/FPGA/taxi/Waveform.vwf" --testbench_file="D:/FPGA/taxi/simulation/qsim/Waveform.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="D:/FPGA/taxi/simulation/qsim/" taxi -c taxi</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="D:/FPGA/taxi/simulation/qsim/" taxi -c taxi</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work taxi.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -L cycloneive -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.taxi_vhd_vec_tst
vcd file -direction taxi.msim.vcd
vcd add -internal taxi_vhd_vec_tst/*
vcd add -internal taxi_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f





</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work taxi.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -sdfmax taxi_vhd_vec_tst/i1=taxi_vhd.sdo -L cycloneive -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.taxi_vhd_vec_tst
vcd file -direction taxi.msim.vcd
vcd add -internal taxi_vhd_vec_tst/*
vcd add -internal taxi_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f





</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk_distance")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_time")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dis_decade")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dis_decade[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_decade";
}

SIGNAL("dis_decade[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_decade";
}

SIGNAL("dis_decade[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_decade";
}

SIGNAL("dis_decade[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_decade";
}

SIGNAL("dis_decade[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_decade";
}

SIGNAL("dis_decade[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_decade";
}

SIGNAL("dis_decade[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_decade";
}

SIGNAL("dis_hundred")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dis_hundred[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_hundred";
}

SIGNAL("dis_hundred[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_hundred";
}

SIGNAL("dis_hundred[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_hundred";
}

SIGNAL("dis_hundred[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_hundred";
}

SIGNAL("dis_hundred[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_hundred";
}

SIGNAL("dis_hundred[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_hundred";
}

SIGNAL("dis_hundred[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_hundred";
}

SIGNAL("dis_mil")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dis_mil[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_mil";
}

SIGNAL("dis_mil[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_mil";
}

SIGNAL("dis_mil[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_mil";
}

SIGNAL("dis_mil[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_mil";
}

SIGNAL("dis_mil[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_mil";
}

SIGNAL("dis_mil[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_mil";
}

SIGNAL("dis_mil[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_mil";
}

SIGNAL("dis_unit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dis_unit[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_unit";
}

SIGNAL("dis_unit[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_unit";
}

SIGNAL("dis_unit[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_unit";
}

SIGNAL("dis_unit[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_unit";
}

SIGNAL("dis_unit[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_unit";
}

SIGNAL("dis_unit[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_unit";
}

SIGNAL("dis_unit[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dis_unit";
}

SIGNAL("pause")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("price_decade")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("price_decade[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_decade";
}

SIGNAL("price_decade[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_decade";
}

SIGNAL("price_decade[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_decade";
}

SIGNAL("price_decade[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_decade";
}

SIGNAL("price_decade[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_decade";
}

SIGNAL("price_decade[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_decade";
}

SIGNAL("price_decade[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_decade";
}

SIGNAL("price_hundred")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("price_hundred[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_hundred";
}

SIGNAL("price_hundred[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_hundred";
}

SIGNAL("price_hundred[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_hundred";
}

SIGNAL("price_hundred[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_hundred";
}

SIGNAL("price_hundred[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_hundred";
}

SIGNAL("price_hundred[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_hundred";
}

SIGNAL("price_hundred[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_hundred";
}

SIGNAL("price_mil")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("price_mil[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_mil";
}

SIGNAL("price_mil[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_mil";
}

SIGNAL("price_mil[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_mil";
}

SIGNAL("price_mil[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_mil";
}

SIGNAL("price_mil[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_mil";
}

SIGNAL("price_mil[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_mil";
}

SIGNAL("price_mil[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_mil";
}

SIGNAL("price_unit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("price_unit[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_unit";
}

SIGNAL("price_unit[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_unit";
}

SIGNAL("price_unit[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_unit";
}

SIGNAL("price_unit[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_unit";
}

SIGNAL("price_unit[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_unit";
}

SIGNAL("price_unit[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_unit";
}

SIGNAL("price_unit[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "price_unit";
}

SIGNAL("start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("stop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk_distance")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.524;
		LEVEL 1 FOR 7.8;
		LEVEL 0 FOR 14.406;
		LEVEL 1 FOR 2.066;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.6;
			LEVEL 1 FOR 2.066;
		}
		LEVEL 0 FOR 1.872;
		LEVEL 1 FOR 1.03;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.75;
			LEVEL 1 FOR 2.25;
		}
		LEVEL 0 FOR 2.75;
		LEVEL 1 FOR 1.22;
		LEVEL 0 FOR 2.616;
		LEVEL 1 FOR 1.55;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.45;
			LEVEL 1 FOR 1.55;
		}
		LEVEL 0 FOR 0.834;
		LEVEL 1 FOR 0.152;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.3;
			LEVEL 1 FOR 4.7;
		}
		LEVEL 0 FOR 5.3;
		LEVEL 1 FOR 4.548;
		LEVEL 0 FOR 1.547;
		LEVEL 1 FOR 9.6;
		LEVEL 0 FOR 11.543;
		LEVEL 1 FOR 2.799;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 1.79;
		LEVEL 1 FOR 2.133;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.533;
			LEVEL 1 FOR 2.133;
		}
		LEVEL 0 FOR 3.924;
		LEVEL 1 FOR 0.24;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.667;
			LEVEL 1 FOR 2.999;
		}
		LEVEL 0 FOR 3.667;
		LEVEL 1 FOR 7.642;
		LEVEL 0 FOR 4.1;
		LEVEL 1 FOR 1.019;
		LEVEL 0 FOR 3.643;
		LEVEL 1 FOR 2.866;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.8;
			LEVEL 1 FOR 2.866;
		}
		LEVEL 0 FOR 1.663;
		LEVEL 1 FOR 1.733;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.6;
			LEVEL 1 FOR 1.733;
		}
		LEVEL 0 FOR 0.097;
		LEVEL 1 FOR 1.898;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.6;
			LEVEL 1 FOR 2.4;
		}
		LEVEL 0 FOR 2.6;
		LEVEL 1 FOR 0.502;
		LEVEL 0 FOR 1.971;
		LEVEL 1 FOR 4.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.9;
			LEVEL 1 FOR 4.1;
		}
		LEVEL 0 FOR 4.889;
		LEVEL 1 FOR 1.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.667;
			LEVEL 1 FOR 1.666;
		}
		LEVEL 0 FOR 3.343;
		LEVEL 1 FOR 2.25;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.75;
			LEVEL 1 FOR 2.25;
		}
		LEVEL 0 FOR 4.174;
		LEVEL 1 FOR 1.999;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.667;
			LEVEL 1 FOR 1.999;
		}
		LEVEL 0 FOR 1.068;
		LEVEL 1 FOR 3.932;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.734;
			LEVEL 1 FOR 3.932;
		}
		LEVEL 0 FOR 2.278;
		LEVEL 1 FOR 0.925;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.7;
			LEVEL 1 FOR 3.3;
		}
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 4.809;
		LEVEL 0 FOR 2.15;
		LEVEL 1 FOR 2.85;
		LEVEL 0 FOR 2.15;
		LEVEL 1 FOR 1.283;
		LEVEL 0 FOR 3.1;
		LEVEL 1 FOR 1.9;
		LEVEL 0 FOR 3.1;
		LEVEL 1 FOR 1.033;
		LEVEL 0 FOR 1.27;
		LEVEL 1 FOR 4.7;
		LEVEL 0 FOR 4.03;
		LEVEL 1 FOR 2.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.1;
			LEVEL 1 FOR 2.9;
		}
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 0.36;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 4.685;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 3.455;
		LEVEL 0 FOR 2.514;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 3.953;
		LEVEL 1 FOR 3.199;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.467;
			LEVEL 1 FOR 3.199;
		}
		LEVEL 0 FOR 4.519;
		LEVEL 1 FOR 3.4;
		LEVEL 0 FOR 11.005;
		LEVEL 1 FOR 6.8;
		LEVEL 0 FOR 6.278;
		LEVEL 1 FOR 0.374;
		LEVEL 0 FOR 12.2;
		LEVEL 1 FOR 7.426;
		LEVEL 0 FOR 1.589;
		LEVEL 1 FOR 1.099;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.234;
			LEVEL 1 FOR 1.099;
		}
		LEVEL 0 FOR 0.646;
		LEVEL 1 FOR 1.429;
		LEVEL 0 FOR 12.4;
		LEVEL 1 FOR 6.171;
		LEVEL 0 FOR 2.231;
		LEVEL 1 FOR 2.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.7;
			LEVEL 1 FOR 2.3;
		}
		LEVEL 0 FOR 0.656;
		LEVEL 1 FOR 2.266;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.4;
			LEVEL 1 FOR 2.266;
		}
		LEVEL 0 FOR 4.215;
		LEVEL 1 FOR 4.048;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.5;
			LEVEL 1 FOR 4.5;
		}
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.452;
		LEVEL 0 FOR 1.258;
		LEVEL 1 FOR 1.699;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.634;
			LEVEL 1 FOR 1.699;
		}
		LEVEL 0 FOR 0.377;
		LEVEL 1 FOR 1.401;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 3.0;
		}
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.76;
		LEVEL 0 FOR 4.4;
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 4.4;
		LEVEL 1 FOR 4.439;
		LEVEL 0 FOR 1.835;
		LEVEL 1 FOR 2.55;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.45;
			LEVEL 1 FOR 2.55;
		}
		LEVEL 0 FOR 0.89;
		LEVEL 1 FOR 4.1;
		LEVEL 0 FOR 5.625;
		LEVEL 1 FOR 2.956;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 5.8;
		}
		LEVEL 0 FOR 4.2;
		LEVEL 1 FOR 2.844;
		LEVEL 0 FOR 4.499;
		LEVEL 1 FOR 3.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.4;
			LEVEL 1 FOR 3.6;
		}
		LEVEL 0 FOR 1.901;
		LEVEL 1 FOR 0.803;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.8;
			LEVEL 1 FOR 2.866;
		}
		LEVEL 0 FOR 3.8;
		LEVEL 1 FOR 4.469;
		LEVEL 0 FOR 13.2;
		LEVEL 1 FOR 5.738;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.158;
		LEVEL 0 FOR 0.732;
		LEVEL 1 FOR 1.833;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 1.833;
		}
		LEVEL 0 FOR 1.251;
		LEVEL 1 FOR 2.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.666;
		}
		LEVEL 0 FOR 3.52;
		LEVEL 1 FOR 0.234;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.967;
			LEVEL 1 FOR 1.366;
		}
		LEVEL 0 FOR 1.967;
		LEVEL 1 FOR 1.133;
		LEVEL 0 FOR 3.223;
		LEVEL 1 FOR 6.4;
		LEVEL 0 FOR 10.377;
		LEVEL 1 FOR 0.123;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 3.465;
		LEVEL 0 FOR 5.3;
		LEVEL 1 FOR 6.422;
		LEVEL 0 FOR 5.8;
		LEVEL 1 FOR 0.424;
		LEVEL 0 FOR 0.55;
		LEVEL 1 FOR 3.1;
		LEVEL 0 FOR 6.35;
		LEVEL 1 FOR 2.239;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.7;
			LEVEL 1 FOR 3.3;
		}
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 4.035;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 3.7;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 2.649;
		LEVEL 0 FOR 4.6;
		LEVEL 1 FOR 2.066;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.6;
			LEVEL 1 FOR 2.066;
		}
		LEVEL 0 FOR 4.6;
		LEVEL 1 FOR 0.145;
		LEVEL 0 FOR 0.246;
		LEVEL 1 FOR 2.6;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.4;
			LEVEL 1 FOR 2.6;
		}
		LEVEL 0 FOR 2.154;
		LEVEL 1 FOR 2.635;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 2.265;
		LEVEL 0 FOR 7.437;
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 4.147;
		LEVEL 1 FOR 2.25;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.75;
			LEVEL 1 FOR 2.25;
		}
		LEVEL 0 FOR 2.739;
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.8;
			LEVEL 1 FOR 3.2;
		}
		LEVEL 0 FOR 8.717;
		LEVEL 1 FOR 9.4;
		LEVEL 0 FOR 8.11;
		LEVEL 1 FOR 1.026;
		LEVEL 0 FOR 10.2;
		LEVEL 1 FOR 9.589;
		LEVEL 0 FOR 2.067;
		LEVEL 1 FOR 1.266;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.067;
			LEVEL 1 FOR 1.266;
		}
		LEVEL 0 FOR 2.067;
		LEVEL 1 FOR 0.452;
	}
}

TRANSITION_LIST("clk_time")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3.568;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.432;
		LEVEL 1 FOR 0.279;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.434;
			LEVEL 1 FOR 1.899;
		}
		LEVEL 0 FOR 1.434;
		LEVEL 1 FOR 2.973;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.648;
		LEVEL 0 FOR 2.57;
		LEVEL 1 FOR 3.133;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.533;
			LEVEL 1 FOR 3.133;
		}
		LEVEL 0 FOR 0.965;
		LEVEL 1 FOR 1.876;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.9;
			LEVEL 1 FOR 2.1;
		}
		LEVEL 0 FOR 2.9;
		LEVEL 1 FOR 1.388;
		LEVEL 0 FOR 5.8;
		LEVEL 1 FOR 3.036;
		LEVEL 0 FOR 1.522;
		LEVEL 1 FOR 3.066;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.6;
			LEVEL 1 FOR 3.066;
		}
		LEVEL 0 FOR 2.08;
		LEVEL 1 FOR 3.072;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.6;
			LEVEL 1 FOR 5.4;
		}
		LEVEL 0 FOR 4.6;
		LEVEL 1 FOR 2.328;
		LEVEL 0 FOR 0.153;
		LEVEL 1 FOR 5.7;
		LEVEL 0 FOR 4.147;
		LEVEL 1 FOR 0.101;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.7;
			LEVEL 1 FOR 4.3;
		}
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 4.199;
		LEVEL 0 FOR 4.856;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 9.429;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 9.301;
		LEVEL 1 FOR 3.6;
		LEVEL 0 FOR 0.414;
		LEVEL 1 FOR 1.052;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.8;
			LEVEL 1 FOR 1.533;
		}
		LEVEL 0 FOR 1.8;
		LEVEL 1 FOR 0.482;
		LEVEL 0 FOR 1.366;
		LEVEL 1 FOR 5.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.9;
			LEVEL 1 FOR 5.1;
		}
		LEVEL 0 FOR 4.629;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.905;
		LEVEL 1 FOR 2.302;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.65;
			LEVEL 1 FOR 2.35;
		}
		LEVEL 0 FOR 2.65;
		LEVEL 1 FOR 0.157;
		LEVEL 0 FOR 1.534;
		LEVEL 1 FOR 1.799;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.534;
			LEVEL 1 FOR 1.799;
		}
		LEVEL 0 FOR 1.534;
		LEVEL 1 FOR 1.691;
		LEVEL 0 FOR 1.698;
		LEVEL 1 FOR 2.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.9;
			LEVEL 1 FOR 2.1;
		}
		LEVEL 0 FOR 1.219;
		LEVEL 1 FOR 3.799;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.867;
			LEVEL 1 FOR 3.799;
		}
		LEVEL 0 FOR 2.852;
		LEVEL 1 FOR 2.927;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.7;
			LEVEL 1 FOR 3.3;
		}
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 0.373;
		LEVEL 0 FOR 2.852;
		LEVEL 1 FOR 5.9;
		LEVEL 0 FOR 1.248;
		LEVEL 1 FOR 1.815;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 2.466;
		}
		LEVEL 0 FOR 4.2;
		LEVEL 1 FOR 2.051;
		LEVEL 0 FOR 1.867;
		LEVEL 1 FOR 1.466;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.867;
			LEVEL 1 FOR 1.466;
		}
		LEVEL 0 FOR 1.867;
		LEVEL 1 FOR 2.327;
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 3.266;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.4;
			LEVEL 1 FOR 3.266;
		}
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 1.01;
		LEVEL 0 FOR 0.882;
		LEVEL 1 FOR 2.933;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.733;
			LEVEL 1 FOR 2.933;
		}
		LEVEL 0 FOR 7.294;
		LEVEL 1 FOR 8.2;
		LEVEL 0 FOR 7.359;
		LEVEL 1 FOR 0.466;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 3.234;
		LEVEL 0 FOR 0.344;
		LEVEL 1 FOR 3.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.666;
		}
		LEVEL 0 FOR 2.658;
		LEVEL 1 FOR 1.796;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.546;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 2.458;
		LEVEL 0 FOR 1.252;
		LEVEL 1 FOR 4.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.3;
			LEVEL 1 FOR 4.7;
		}
		LEVEL 0 FOR 4.823;
		LEVEL 1 FOR 2.85;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.15;
			LEVEL 1 FOR 2.85;
		}
		LEVEL 0 FOR 1.818;
		LEVEL 1 FOR 2.85;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.15;
			LEVEL 1 FOR 2.85;
		}
		LEVEL 0 FOR 1.707;
		LEVEL 1 FOR 1.106;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.4;
			LEVEL 1 FOR 1.6;
		}
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 4.578;
		LEVEL 0 FOR 4.9;
		LEVEL 1 FOR 5.1;
		LEVEL 0 FOR 4.9;
		LEVEL 1 FOR 5.344;
		LEVEL 0 FOR 11.2;
		LEVEL 1 FOR 4.472;
		LEVEL 0 FOR 0.154;
		LEVEL 1 FOR 1.633;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.7;
			LEVEL 1 FOR 1.633;
		}
		LEVEL 0 FOR 1.547;
		LEVEL 1 FOR 1.549;
		LEVEL 0 FOR 6.4;
		LEVEL 1 FOR 2.051;
		LEVEL 0 FOR 0.984;
		LEVEL 1 FOR 1.266;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.067;
			LEVEL 1 FOR 1.266;
		}
		LEVEL 0 FOR 1.084;
		LEVEL 1 FOR 4.26;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.2;
			LEVEL 1 FOR 4.8;
		}
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 0.54;
		LEVEL 0 FOR 2.407;
		LEVEL 1 FOR 4.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.5;
			LEVEL 1 FOR 4.5;
		}
		LEVEL 0 FOR 3.093;
		LEVEL 1 FOR 1.936;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.15;
			LEVEL 1 FOR 2.85;
		}
		LEVEL 0 FOR 2.15;
		LEVEL 1 FOR 4.339;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 3.7;
		LEVEL 0 FOR 6.3;
		LEVEL 1 FOR 0.275;
		LEVEL 0 FOR 0.739;
		LEVEL 1 FOR 2.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.333;
			LEVEL 1 FOR 2.333;
		}
		LEVEL 0 FOR 3.596;
		LEVEL 1 FOR 1.603;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.3;
			LEVEL 1 FOR 1.7;
		}
		LEVEL 0 FOR 3.3;
		LEVEL 1 FOR 0.957;
		LEVEL 0 FOR 2.2;
		LEVEL 1 FOR 1.133;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.2;
			LEVEL 1 FOR 1.133;
		}
		LEVEL 0 FOR 2.2;
		LEVEL 1 FOR 0.274;
		LEVEL 0 FOR 1.058;
		LEVEL 1 FOR 2.25;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.75;
			LEVEL 1 FOR 2.25;
		}
		LEVEL 0 FOR 1.692;
		LEVEL 1 FOR 1.883;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.1;
			LEVEL 1 FOR 3.9;
		}
		LEVEL 0 FOR 6.1;
		LEVEL 1 FOR 3.539;
		LEVEL 0 FOR 3.1;
		LEVEL 1 FOR 1.9;
		LEVEL 0 FOR 3.1;
		LEVEL 1 FOR 0.378;
		LEVEL 0 FOR 3.068;
		LEVEL 1 FOR 3.6;
		LEVEL 0 FOR 4.03;
		LEVEL 1 FOR 1.75;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.25;
			LEVEL 1 FOR 1.75;
		}
		LEVEL 0 FOR 4.035;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 7.51;
		LEVEL 1 FOR 4.2;
		LEVEL 0 FOR 2.307;
		LEVEL 1 FOR 1.278;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 7.053;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 4.1;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 3.166;
		LEVEL 0 FOR 6.8;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 6.8;
		LEVEL 1 FOR 2.708;
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 4.133;
		LEVEL 1 FOR 1.63;
		LEVEL 0 FOR 0.494;
		LEVEL 1 FOR 1.833;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 1.833;
		}
		LEVEL 0 FOR 1.465;
		LEVEL 1 FOR 7.6;
		LEVEL 0 FOR 12.226;
		LEVEL 1 FOR 2.35;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.65;
			LEVEL 1 FOR 2.35;
		}
		LEVEL 0 FOR 2.366;
		LEVEL 1 FOR 1.652;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.8;
			LEVEL 1 FOR 2.2;
		}
		LEVEL 0 FOR 2.8;
		LEVEL 1 FOR 0.548;
		LEVEL 0 FOR 3.885;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 9.115;
		LEVEL 1 FOR 1.057;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.95;
			LEVEL 1 FOR 2.05;
		}
		LEVEL 0 FOR 2.95;
		LEVEL 1 FOR 0.993;
		LEVEL 0 FOR 3.635;
		LEVEL 1 FOR 3.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.6;
			LEVEL 1 FOR 3.4;
		}
		LEVEL 0 FOR 4.338;
		LEVEL 1 FOR 3.7;
		LEVEL 0 FOR 4.927;
		LEVEL 1 FOR 0.828;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.267;
			LEVEL 1 FOR 1.066;
		}
		LEVEL 0 FOR 2.267;
		LEVEL 1 FOR 0.239;
		LEVEL 0 FOR 0.636;
		LEVEL 1 FOR 1.166;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.167;
			LEVEL 1 FOR 1.166;
		}
		LEVEL 0 FOR 1.532;
	}
}

TRANSITION_LIST("dis_decade[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_decade[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_decade[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_decade[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_decade[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_decade[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_decade[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_hundred[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_hundred[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_hundred[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_hundred[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_hundred[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_hundred[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_hundred[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_mil[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_mil[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_mil[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_mil[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_mil[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_mil[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_mil[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_unit[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_unit[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_unit[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_unit[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_unit[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_unit[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dis_unit[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("pause")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 410.0;
	}
}

TRANSITION_LIST("price_decade[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_decade[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_decade[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_decade[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_decade[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_decade[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_decade[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_hundred[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_hundred[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_hundred[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_hundred[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_hundred[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_hundred[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_hundred[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_mil[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_mil[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_mil[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_mil[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_mil[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_mil[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_mil[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_unit[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_unit[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_unit[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_unit[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_unit[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_unit[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("price_unit[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 910.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("stop")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 210.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk_distance";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_time";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dis_hundred[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dis_decade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "dis_unit[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "dis_mil[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
	CHILDREN = 35, 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "price_hundred[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "price_decade[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53, 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "price_unit[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
	CHILDREN = 59, 60, 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "price_mil[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "stop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pause";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
